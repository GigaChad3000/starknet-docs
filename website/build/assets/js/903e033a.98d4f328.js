"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[544],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return s}});var r=n(7294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function i(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},l=Object.keys(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(t);for(r=0;r<l.length;r++)n=l[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var c=r.createContext({}),m=function(t){var e=r.useContext(c),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},d=function(t){var e=m(t.components);return r.createElement(c.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},u=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,l=t.originalType,c=t.parentName,d=i(t,["components","mdxType","originalType","parentName"]),u=m(n),s=a,k=u["".concat(c,".").concat(s)]||u[s]||p[s]||l;return n?r.createElement(k,o(o({ref:e},d),{},{components:n})):r.createElement(k,o({ref:e},d))}));function s(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var c in e)hasOwnProperty.call(e,c)&&(i[c]=e[c]);i.originalType=t,i.mdxType="string"==typeof t?t:a,o[1]=i;for(var m=2;m<l;m++)o[m]=n[m];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2905:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={sidebar_position:6},c="Block header",m={unversionedId:"Blocks/header",id:"Blocks/header",title:"Block header",description:"The following fields define the block header",source:"@site/docs/Blocks/header.md",sourceDirName:"Blocks",slug:"/Blocks/header",permalink:"/docs/Blocks/header",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Blocks/header.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Tutorial Intro",permalink:"/docs/intro"},next:{title:"domain and range",permalink:"/docs/hashing/"}},d=[],p={toc:d};function u(t){var e=t.components,n=(0,a.Z)(t,o);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"block-header"},"Block header"),(0,l.kt)("p",null,"The following fields define the block header"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Name"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"),(0,l.kt)("th",{parentName:"tr",align:"center"},"implemented"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"parent_block_hash"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of this block's parent"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"block_number"),(0,l.kt)("td",{parentName:"tr",align:null},"integer ","|",' "pending"'),(0,l.kt)("td",{parentName:"tr",align:null},"The number (height) of this block"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"global_state_root"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"The hash of this block's parent"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"sequencer_address"),(0,l.kt)("td",{parentName:"tr",align:null},"Ethereum address?"),(0,l.kt)("td",{parentName:"tr",align:null},"The Ethereum address of the sequencer submitting the state update that creates this block"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"block_timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},"timestamp"),(0,l.kt)("td",{parentName:"tr",align:null},"The time the sequencer created this block before executing transactions"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"transaction_count"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of transactions in a ablock"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"transaction_commitment"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"A commitment to the transactions included in the block"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event_count"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"The number of events"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"event_commitment"),(0,l.kt)("td",{parentName:"tr",align:null},"field_element"),(0,l.kt)("td",{parentName:"tr",align:null},"A commitment to the events produced in this block"),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"protocol_version"),(0,l.kt)("td",{parentName:"tr",align:null},"integer"),(0,l.kt)("td",{parentName:"tr",align:null},"The version of the StarkNet protocol used when creating this block"),(0,l.kt)("td",{parentName:"tr",align:"center"})),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"extra data"),(0,l.kt)("td",{parentName:"tr",align:null},"field element"),(0,l.kt)("td",{parentName:"tr",align:null},"Extraneous data that might be useful for running transactions"),(0,l.kt)("td",{parentName:"tr",align:"center"})))),(0,l.kt)("h1",{id:"block-hash"},"Block hash"),(0,l.kt)("p",null,"The block hash is defined as the Pedersen hash over the header's elements."),(0,l.kt)("p",null,"$h(B)=h(block_number, global_state_root, sequencer_address, block_timestamp,\ntransaction_count, transaction_commitment, event_count, event_commitment, 0, 0, parent_block_hash)$"))}u.isMDXComponent=!0}}]);